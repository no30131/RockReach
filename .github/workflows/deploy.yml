name: CI/CD Pipeline

on:
  push:
    branches:
      - sprint3

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'

    - name: Install dependencies for server
      run: |
        cd server
        npm install

    # - name: Run tests
    #   run: npm test

    - name: Build Docker image
      run: |
        cd server  
        docker build -t no30131/rock_reach .

    - name: Log in to Docker Hub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Push Docker image to Docker Hub
      run: docker push no30131/rock_reach

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Pull Docker image from Docker Hub
      run: docker pull no30131/rock_reach

    - name: Deploy Docker container to EC2
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        echo "$SSH_PRIVATE_KEY" > m3.pem
        chmod 600 m3.pem
        ssh -i "m3.pem" $EC2_USER@$EC2_HOST "docker pull no30131/rock_reach && docker stop app || true && docker rm app || true && docker run -d --name app -p 7000:7000 no30131/rock_reach"
