name: CI/CD Pipeline

on:
  push:
    branches:
      - sprint4
 
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js for server
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies for server
        run: |
          cd server
          npm install

      - name: Set up Node.js for client
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies for client
        run: |
          cd client
          npm install

      - name: Build client
        run: |
          cd client
          npm run build

      - name: List client/build files
        run: |
          ls -la client/build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: |
          aws s3 sync client/build s3://rock0628 --delete &&
          aws cloudfront create-invalidation --distribution-id EHSJGMM7WW9AD --paths "/*"

      - name: Build Docker image
        run: |
          cd server
          docker build -t no30131/rock_reach .

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker image to Docker Hub
        run: docker push no30131/rock_reach

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Pull Docker image from Docker Hub
        run: docker pull no30131/rock_reach

      - name: Clean up unused Docker resources
        run: docker system prune -af

      - name: Deploy Docker container to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          echo "Creating SSH key file"
          echo "$SSH_PRIVATE_KEY" > m3.pem
          chmod 600 m3.pem
          echo "Connecting to EC2 and deploying Docker container"
          ssh -o StrictHostKeyChecking=no -i m3.pem $EC2_USER@$EC2_HOST '
            echo "Pulling Docker image"
            docker pull no30131/rock_reach &&
            echo "Stopping existing container if any"
            docker stop app || true &&
            echo "Removing existing container if any"
            docker rm app || true &&
            echo "Running new Docker container"
            docker run -d --name app -p 7000:7000 --env-file /home/ubuntu/.env -v /home/ubuntu/uploads:/app/uploads no30131/rock_reach'
            